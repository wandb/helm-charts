enabled: true

nameOverride: ""
fullnameOverride: ""

image:
  repository: prometheuscommunity/stackdriver-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest
  # pullSecrets: []

hostNetwork: false

# Tolerations for pod scheduling
tolerations: []

restartPolicy: Always
replicaCount: 1

extraEnv: {}

extraEnvFrom: {}

extraArgs: {}

stackdriver:
  # The Google Project ID to gather metrics for
  projectId: "FALSE"
  # An existing secret which contains credentials.json
  serviceAccountSecret: ""
  # Provide custom key for the existing secret to load credentials.json from
  serviceAccountSecretKey: ""
  # A service account key JSON file. Must be provided when no existing secret is used, in this case a new secret will be created holding this service account
  serviceAccountKey: ""
  # Max number of retries that should be attempted on 503 errors from Stackdriver
  maxRetries: 0
  # How long should Stackdriver_exporter wait for a result from the Stackdriver API
  httpTimeout: 10s
  # Max time between each request in an exp backoff scenario
  maxBackoff: 5s
  # The amount of jitter to introduce in an exp backoff scenario
  backoffJitter: 1s
  # The HTTP statuses that should trigger a retry
  retryStatuses: 503
  # Drop metrics from attached projects and fetch `project_id` only
  dropDelegatedProjects: false
  metrics:
    # The prefixes to gather metrics for, we default to just CPU metrics.
    typePrefixes: "cloudsql.googleapis.com/database,redis"
    # The filters to refine the metrics query by using Filter objects that Google provides.
    # Filter objects: project, group.id, resource.type, resource.labels.[KEY], metric.type, metric.labels.[KEY]
    # https://cloud.google.com/monitoring/api/v3/filters
    filters:
      []
      # - 'pubsub.googleapis.com/subscription:resource.labels.subscription_id=monitoring.regex.full_match("us-west4.*my-team.*")'
    # The frequency to request
    interval: "5m"
    # How far into the past to offset
    offset: "0s"
    # Offset for the Google Stackdriver Monitoring Metrics interval into the past by the ingest delay from the metric's metadata.
    ingestDelay: false
    # If enabled will treat all DELTA metrics as an in-memory counter instead of a gauge.
    aggregateDeltas: false
    # How long should a delta metric continue to be exported after GCP stops producing a metric
    aggregateDeltasTTL: "30m"

web:
  # Port to listen on
  listenAddress: ":9255"
  # Path under which to expose metrics.
  path: /metrics

secret:
  labels: {}
customLabels:
  {}
  # app: prometheus-stackdriver-exporter

service:
  type: ClusterIP
  httpPort: 9255
  annotations: {}

pod:
  labels: {}
  annotations: {}
  securityContext:
    runAsNonRoot: true
    runAsUser: 999
    runAsGroup: 0
    fsGroup: 0
    fsGroupChangePolicy: "OnRootMismatch"
    seccompProfile:
      type: ""

container:
  securityContext:
    capabilities:
      add: []
      drop: []
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    privileged: false

deployment: {}

serviceAccount:
  create: true

common:
  labels: {}
  annotations: {}

resources:
  requests:
    cpu: 200m
    memory: 200Mi
  limits:
    cpu: 500m
    memory: 500Mi
