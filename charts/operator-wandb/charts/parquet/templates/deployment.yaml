{{- if .Values.enabled }}
{{- $bucketProvider := (include "wandb.bucket" . | fromYaml).provider -}}
{{- $imageCfg := dict "global" $.Values.global.image "local" $.Values.image -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parquet.fullname" . }}
  labels:
    app.kubernetes.io/component: "service"
    {{- include "wandb.commonLabels" . | nindent 4 }}
    {{- include "parquet.commonLabels" . | nindent 4 }}
    {{- include "parquet.labels" . | nindent 4 }}
    {{- if .Values.deployment.labels -}}
    {{-   toYaml .Values.deployment.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "wandb.deploymentAnnotations" $ | nindent 4 }}
    {{- if .Values.deployment.annotations -}}
    {{-   toYaml .Values.deployment.annotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "wandb.selectorLabels" $ | nindent 6 }}
      {{- include "parquet.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "service"
        {{- include "wandb.podLabels" . | nindent 8 }}
        {{- include "parquet.commonLabels" . | nindent 8 }}
        {{- include "parquet.podLabels" . | nindent 8 }}
        {{- include "parquet.labels" . | nindent 8 }}
      annotations:
        {{- if .Values.fuse.enabled }}
        {{- if and (eq $bucketProvider "gcs") (eq .Values.global.cloudProvider "gcp") }}
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/ephemeral-storage-limit: "{{ index .Values.fuse.resources.limits "ephemeral-storage" }}"
        gke-gcsfuse/cpu-request: "{{ .Values.fuse.resources.requests.cpu }}"
        gke-gcsfuse/cpu-limit: "{{ .Values.fuse.resources.limits.cpu }}"
        gke-gcsfuse/memory-request: "{{ .Values.fuse.resources.requests.memory }}"
        gke-gcsfuse/memory-limit: "{{ .Values.fuse.resources.limits.memory }}"
        {{- end }}
        {{- end }}
        {{- if .Values.pod.annotations -}}
        {{-   toYaml .Values.pod.annotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- include "wandb.nodeSelector" . | nindent 6 }}
      {{- include "wandb.priorityClassName" . | nindent 6 }}
      {{- include "wandb.podSecurityContext" .Values.pod.securityContext | nindent 6 }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- include "wandb.containerSecurityContext" .Values.container.securityContext | nindent 10 }}
          volumeMounts:
            {{- if ne (include "wandb.redis.caCert" .) "" }}
            - name: {{ include "parquet.fullname" . }}-redis-ca
              mountPath: /etc/ssl/certs/redis_ca.pem
              subPath: redis_ca.pem
            {{- end }}
            {{- if .Values.global.caCertsConfigMap }}
            - name: wandb-ca-certs-user
              mountPath: /usr/local/share/ca-certificates/
            {{- end }}
            {{- if .Values.global.customCACerts }}
            {{- range $index, $v := .Values.global.customCACerts }}
            - name: wandb-ca-certs
              mountPath: /usr/local/share/ca-certificates/customCA{{$index}}.crt
              subPath: customCA{{$index}}.crt
            {{- end }}
            {{- end }}
            {{- if .Values.fuse.enabled }}
            - name: fuse
              mountPath: "/{{ (include "wandb.bucket" . | fromYaml).name }}"
            {{- end }}
            {{- if and .Values.gcsCredConfigMap }}
            - name: gcs-credentials
              mountPath: /var/run/secrets/google/credentials_config.json
              subPath: credentials_config.json
            {{- end }}
          ports:
            - name: parquet
              containerPort: 8087
              protocol: TCP
          envFrom:
          {{- if .Values.envFrom }}
            {{- tpl (include "parquet.envFrom" . ) . | nindent 12 }}
          {{- end }}
          env:
            {{- if and .Values.gcsCredConfigMap }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/run/secrets/google/credentials_config.json
            {{- end }}
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: BUCKET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ (include "wandb.bucket" . | fromYaml).secretName }}"
                  key: "{{ (include "wandb.bucket" . | fromYaml).accessKeyName }}"
                  optional: true
            - name: BUCKET_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ (include "wandb.bucket" . | fromYaml).secretName }}"
                  key: "{{ (include "wandb.bucket" . | fromYaml).secretKeyName }}"
                  optional: true
            - name: BUCKET
              value: "{{ (include "wandb.bucket" . | fromYaml).url }}"
            {{- if ne .Values.traceRatio 0.0 }}
            - name: GORILLA_TRACER
              value: {{ include "wandb.otelTracesEndpoint" . | quote }}
            {{- end }}
            - name: ONLY_SERVICE
              value: gorilla-parquet
            - name: LOGGING_ENABLED
              value: 'true'
            - name: MYSQL_PORT
              value: "{{ include "wandb.mysql.port" . }}"
            - name: MYSQL_HOST
              value: "{{ include "wandb.mysql.host" . }}"
            - name: MYSQL_DATABASE
              value: "{{ include "wandb.mysql.database" . }}"
            - name: MYSQL_USER
              value: "{{ include "wandb.mysql.user" . }}"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.mysql.passwordSecret" . }}
                  key: {{ .Values.global.mysql.passwordSecret.passwordKey }}
            - name: MYSQL
              value: "mysql://$(MYSQL_USER):$(MYSQL_PASSWORD)@$(MYSQL_HOST):$(MYSQL_PORT)/$(MYSQL_DATABASE)"
            - name: A_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.redis.passwordSecret" . }}
                  optional: true
                  key: {{ .Values.global.redis.secret.secretKey }}
            - name: REDIS_PORT
              value: "{{ include "wandb.redis.port" . }}"
            - name: REDIS_HOST
              value: "{{ include "wandb.redis.host" . }}"
            - name: REDIS_PARAMS
              value: "{{ include "wandb.redis.parametersQuery" . | trim }}"
            - name: REDIS
              value: "{{ include "wandb.redis.connectionString" . | trim }}"

            - name: GORILLA_SETTINGS_CACHE
              value: "{{ include "wandb.redis.connectionString" . | trim }}"
            - name: GORILLA_METADATA_CACHE
              value: "{{ include "wandb.redis.connectionString" . | trim }}"

            - name: GORILLA_TSHIRT_SIZE
              value: {{ .Values.global.size | quote }}

            {{- if .Values.global.executor.enabled }}
            - name: GORILLA_TASK_QUEUE
              value: "{{ include "wandb.redis.connectionString" . | trim }}"
            - name: GORILLA_TASK_QUEUE_WORKER_ENABLED
              value: "false"
            - name: GORILLA_CLEAR_TASK_DEDUPE_KEY_ENABLED
              value: "false"
            {{- end }}

            - name: GORILLA_HISTORY_STORE
              value: {{ include "parquet.historyStore" . | quote }}
            - name: GORILLA_PARQUET_LIVE_HISTORY_STORE
              value: {{ include "parquet.liveHistoryStore" . | quote }}
            - name: GORILLA_FILE_STREAM_STORE_ADDRESS
              value: {{ include "parquet.fileStreamStore" . | quote }}

            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  {{- with include "wandb.bucket" . | fromYaml }}
                  name: "{{ .secretName }}"
                  key: {{ .accessKeyName }}
                  optional: true
                  {{- end }}

            - name: BUCKET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ (include "wandb.bucket" . | fromYaml).secretName }}"
                  key: "{{ (include "wandb.bucket" . | fromYaml).accessKeyName }}"
                  optional: true

            - name: BUCKET_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ (include "wandb.bucket" . | fromYaml).secretName }}"
                  key: "{{ (include "wandb.bucket" . | fromYaml).secretKeyName }}"
                  optional: true

            - name: G_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP

            {{- if ne .Values.global.email.smtp.host "" }}
            - name: GORILLA_EMAIL_SINK
              value: "smtp://{{ .Values.global.email.smtp.user }}:{{ .Values.global.email.smtp.password }}@{{ .Values.global.email.smtp.host }}:{{ .Values.global.email.smtp.port }}"
            {{- end }}

            {{- if .Values.fuse.enabled }}
            - name: GORILLA_PARQUET_FUSE_ENABLED
              value: "true"
            - name: GORILLA_PARQUET_READER_FUSE_ENABLED
              value: "true"
            {{- end }}

            - name: GORILLA_PARQUET_ARROW_BUFFER_SIZE
              value: "2147483648" # 2GB

            {{- include "parquet.extraEnv" (dict "global" .Values.global "local" .Values) | nindent 12 }}
            {{- include "wandb.extraEnvFrom" (dict "root" $ "local" .) | nindent 12 }}

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8087
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /ready
              port: 8087
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      serviceAccountName: {{ include "parquet.serviceAccountName" . }}
      volumes:
        {{- if and .Values.gcsCredConfigMap }}
        - name: gcs-credentials
          configMap:
            name: {{ .Values.gcsCredConfigMap }}
        {{- end }}
        {{- if .Values.fuse.enabled }}
        - name: fuse
          {{- if and (eq $bucketProvider "gcs") (eq .Values.global.cloudProvider "gcp") }}
          csi:
            driver: gcsfuse.csi.storage.gke.io
            readOnly: true
            volumeAttributes:
              bucketName: {{ (include "wandb.bucket" . | fromYaml).name }}
              mountOptions: "implicit-dirs,file-cache:enable-parallel-downloads:true,metadata-cache:stat-cache-max-size-mb:-1,metadata-cache:type-cache-max-size-mb:-1,file-system:kernel-list-cache-ttl-secs:-1,metadata-cache:ttl-secs:-1"
              fileCacheCapacity: "{{ .Values.fuse.fileCacheCapacity }}"
              fileCacheForRangeRead: "true"
              gcsfuseMetadataPrefetchOnMount: "true"
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if ne (include "wandb.redis.caCert" .) "" }}
        - name: {{ include "parquet.fullname" . }}-redis-ca
          secret:
            secretName: "{{ include "wandb.redis.passwordSecret" . }}"
            items:
              - key: REDIS_CA_CERT
                path: redis_ca.pem
        {{- end }}
        {{- if .Values.global.caCertsConfigMap }}
        - name: wandb-ca-certs-user
          configMap:
            name: {{ .Values.global.caCertsConfigMap }}
        {{- end }}
        {{- if .Values.global.customCACerts }}
        - name: wandb-ca-certs
          configMap:
            name: {{ include "parquet.fullname" . }}-ca-certs
        {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
