{{- $imageCfg := dict "global" $.Values.global.image "local" $.Values.image -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "executor.fullname" . }}
  labels:
    {{- include "wandb.commonLabels" . | nindent 4 }}
    {{- include "executor.commonLabels" . | nindent 4 }}
    {{- include "executor.labels" . | nindent 4 }}
    {{- if .Values.deployment.labels -}}
    {{-   toYaml .Values.deployment.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "wandb.deploymentAnnotations" . | nindent 4 }}
    {{- if .Values.deployment.annotations -}}
    {{-   toYaml .Values.deployment.annotations | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "wandb.selectorLabels" $ | nindent 6 }}
      {{- include "executor.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.pod.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wandb.podLabels" . | nindent 8 }}
        {{- include "executor.labels" . | nindent 8 }}
        {{- include "executor.commonLabels" . | nindent 8 }}
        {{- include "executor.podLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "executor.serviceAccountName" . }}
      {{- include "wandb.nodeSelector" . | nindent 6 }}
      {{- include "wandb.priorityClassName" . | nindent 6 }}
      {{- include "wandb.podSecurityContext" .Values.pod.securityContext | nindent 6 }}
      # needed to ensure ensure Kafka consumers handle pod termination gracefully and avoid data loss
      terminationGracePeriodSeconds: 60
      {{- include "wandb.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- include "wandb.containerSecurityContext" .Values.container.securityContext | nindent 10 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            {{- if ne (include "wandb.redis.caCert" .) "" }}
            - name: {{ include "executor.fullname" . }}-redis-ca
              mountPath: /etc/ssl/certs/redis_ca.pem
              subPath: redis_ca.pem
            {{- end }}
          envFrom:
          {{- if .Values.envFrom }}
            {{- tpl (include "executor.envFrom" . ) . | nindent 12 }}
          {{- end }}
          env:
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: BUCKET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ (include "wandb.bucket" . | fromYaml).secretName }}"
                  key: "{{ (include "wandb.bucket" . | fromYaml).accessKeyName }}"
                  optional: true
            - name: BUCKET_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ (include "wandb.bucket" . | fromYaml).secretName }}"
                  key: "{{ (include "wandb.bucket" . | fromYaml).secretKeyName }}"
                  optional: true
            - name: BUCKET
              value: "{{ (include "wandb.bucket" . | fromYaml).url }}"
            {{- if ne .Values.traceRatio 0.0 }}
            - name: GORILLA_TRACER
              value: {{ include "wandb.otelTracesEndpoint" . | quote }}
            {{- end }}
            - name: ONLY_SERVICE
              value: gorilla-executor
            - name: LOGGING_ENABLED
              value: 'true'
            - name: MYSQL_PORT
              value: "{{ include "wandb.mysql.port" . }}"
            - name: MYSQL_HOST
              value: "{{ include "wandb.mysql.host" . }}"
            - name: MYSQL_DATABASE
              value: "{{ include "wandb.mysql.database" . }}"
            - name: MYSQL_USER
              value: "{{ include "wandb.mysql.user" . }}"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.mysql.passwordSecret" . }}
                  key: {{ .Values.global.mysql.passwordSecret.passwordKey }}
            - name: MYSQL
              value: "mysql://$(MYSQL_USER):$(MYSQL_PASSWORD)@$(MYSQL_HOST):$(MYSQL_PORT)/$(MYSQL_DATABASE)"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.redis.passwordSecret" . }}
                  optional: true
                  key: {{ .Values.global.redis.secret.secretKey }}
            - name: REDIS_PORT
              value: "{{ include "wandb.redis.port" . }}"
            - name: REDIS_HOST
              value: "{{ include "wandb.redis.host" . }}"
            - name: REDIS
              value: "{{ include "executor.redis" . | trim }}"

            - name: GORILLA_SETTINGS_CACHE
              value: "{{ include "executor.redis" . | trim }}"
            - name: GORILLA_METADATA_CACHE
              value: "{{ include "executor.redis" . | trim }}"

            - name: GORILLA_TASK_QUEUE
              value: "{{ include "executor.taskQueue" . | trim }}"
            - name: GORILLA_TASK_QUEUE_WORKER_ENABLED
              value: "true"
            
            {{- if not .Values.global.pubSub.enabled}}
            - name: KAFKA_CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wandb.kafka.passwordSecret" . }}
                  key: {{ include "wandb.kafka.passwordSecret.passwordKey" .}}
                  optional: true
            - name: KAFKA_TOPIC_RUN_UPDATE_SHADOW_QUEUE
              value: {{ include "wandb.kafka.runUpdatesShadowTopic" .}}
            - name: KAFKA_RUN_UPDATE_SHADOW_QUEUE_NUM_PARTITIONS
              value: "{{ include "wandb.kafka.runUpdatesShadowNumPartitions" .}}"
            {{- end }}
            - name: GORILLA_RUN_UPDATE_SHADOW_QUEUE
              value: >
                {
                  "overflow-bucket": {
                    "store": {{ (include "wandb.bucket" . | fromYaml).url | quote}},
                    "name": "wandb",
                    "prefix": "wandb-overflow"
                  },
                  "addr": {{ include "executor.runUpdateShadowTopic" . | quote }}
                }

            - name: GORILLA_HISTORY_STORE
              value: {{ include "executor.historyStore" . | quote }}
            - name: GORILLA_PARQUET_LIVE_HISTORY_STORE
              value: {{ include "executor.liveHistoryStore" .| quote }}
            - name: GORILLA_FILE_STREAM_STORE_ADDRESS
              value: {{ include "executor.fileStreamStore" . | quote }}

            - name: GORILLA_PARQUET_ARROW_BUFFER_SIZE
              value: "2147483648" # 2GB

            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  {{- with include "wandb.bucket" . | fromYaml }}
                  name: "{{ .secretName }}"
                  key: {{ .accessKeyName }}
                  optional: true
                  {{- end }}

            - name: G_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP

            {{- if ne .Values.global.email.smtp.host "" }}
            - name: GORILLA_EMAIL_SINK
              value: "smtp://{{ .Values.global.email.smtp.user }}:{{ .Values.global.email.smtp.password }}@{{ .Values.global.email.smtp.host }}:{{ .Values.global.email.smtp.port }}"
            {{- end }}

            {{- include "executor.extraEnv" (dict "global" .Values.global "local" .Values) | nindent 12 }}
            {{- include "wandb.extraEnvFrom" (dict "root" $ "local" .) | nindent 12 }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if ne (include "wandb.redis.caCert" .) "" }}
        - name: {{ include "executor.fullname" . }}-redis-ca
          secret:
            secretName: "{{ include "wandb.redis.passwordSecret" . }}"
            items:
              - key: REDIS_CA_CERT
                path: redis_ca.pem
        {{- end }}
