apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-api-configmap
  labels:
    {{- include "wandb.commonLabels" . | nindent 4 }}
data:
  # Values that correspond to existing configurations from gorilla.yaml
  GORILLA_PORT: "8081"
  GORILLA_FRONTEND_HOST: "{{ .Values.global.host }}"
  GORILLA_LICENSE_CERT_PATH: "/jwks.json"
  GORILLA_FILE_METADATA_SOURCE_IS_INTERNAL: "true"
  {{- if ne .Values.global.auth.oidc.clientId "" }}
  GORILLA_OIDC_CLIENT_ID: "{{ .Values.global.auth.oidc.clientId }}"
  GORILLA_OIDC_AUTH_METHOD: "{{ .Values.global.auth.oidc.authMethod }}"
  GORILLA_OIDC_ISSUER: "{{ .Values.global.auth.oidc.issuer }}"
  {{- end }}
  GORILLA_SESSION_LENGTH: "{{ .Values.global.auth.sessionLengthHours }}h"
  {{- if and .Values.global .Values.global.observability }}
    {{- if eq (default "custom" .Values.global.observability.mode) "otel" }}
  GORILLA_STATSD_PORT: "8125"
  GORILLA_STATSD_HOST: "0.0.0.0"
    {{- end }}
  {{- end }}
  {{- if .Values.extraCors }}
  GORILLA_CORS_ORIGINS: "{{ join "," .Values.extraCors }}"
  {{- end }}
  GORILLA_SWEEP_PROVIDER: "{{ .Values.global.sweepProvider | default (printf "http://%s-app:8082" .Release.Name) }}"
  GORILLA_VIEW_SPEC_UPDATER_EXECUTABLE: "/view-spec-updater-linux"
  GORILLA_LIMITER: "noop://"
  GORILLA_PARQUET_RPC_PATH: "/_goRPC_"
  GORILLA_SCHEMA_FILE: "/schema.graphql"
  GORILLA_ACTIVITY_STORE_ENABLE: "true"
  GORILLA_GLUE_TASK_STORE: "memory://"
  GORILLA_COLLECT_AUDIT_LOGS: "true"
  GORILLA_USE_PARQUET_HISTORY_STORE: "true"
  GORILLA_PARQUET_PORT: "8087"
  GORILLA_PARQUET_ARROW_BUFFER_SIZE: "2147483648"
  GORILLA_RUN_UPDATE_QUEUE_ADDR: "internal://"
  GORILLA_FILE_STORE_IS_PROXIED: "false"
  GORILLA_ACTIVITY_STORE_SERVE: "true"
  GORILLA_ACTIVITY_STORE_BACKFILL_ENABLE: "true"
  GORILLA_ARTIFACT_GC_ENABLED: "false"
  GORILLA_GLUE_TASK_PROVIDER: "memory://"
  GORILLA_DEFAULT_REGION: "minio-local"
  GORILLA_TASK_QUEUE_WORKER_ENABLED: "false"
  {{- if index .Values.global "weave-trace" "enabled" }}
  GORILLA_INTERNAL_JWT_SUBJECTS_TO_ISSUERS: {{ tpl (include "wandb.internalJWTMap" .) . }}
  {{- end }}
  GORILLA_TSHIRT_SIZE: "{{ .Values.global.size }}"
  GORILLA_TRACER: '{{ include "wandb.otelTracesEndpoint" . | trim }}'

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-api-secret
  labels:
    {{- include "wandb.commonLabels" . | nindent 4 }}
stringData:
  {{- if ne .Values.global.email.smtp.host "" }}
  GORILLA_EMAIL_SINK: "smtp://{{ .Values.global.email.smtp.user }}:{{ .Values.global.email.smtp.password }}@{{ .Values.global.email.smtp.host }}:{{ .Values.global.email.smtp.port }}"
  {{- else }}
  GORILLA_EMAIL_SINK: "https://api.wandb.ai/email/dispatch"
  {{- end }}
  SLACK_SECRET: {{ default "" .Values.global.slack.secret }}
  {{- if and (not .Values.global.licenseSecret.name) (not .Values.global.licenseSecret.key) .Values.global.license }}
  LICENSE: {{ .Values.global.license }}
  GORILLA_LICENSE: {{ .Values.global.license }}
  {{- end }}
  {{- if ne .Values.global.auth.oidc.clientId ""  }}
  GORILLA_OIDC_CLIENT_SECRET: {{ .Values.global.auth.oidc.secret }}
  {{- end }}