{{- range $jobName, $job := .Values.jobs }}
{{/*
  Since an empty bool is false, and we want the unspecified value to be true,
  we create a dictionary with enabled=true and mergeOverwrite the provided values
*/}}
{{- $job := mergeOverwrite (dict "enabled" true) $job}}
{{- if $job.enabled }}
  {{- $_ := set $job "restartPolicy" (default "Never" $job.restartPolicy ) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s" $.Release.Name $jobName }}
  labels:
    {{- include "wandb-base.labels" $ | nindent 4 }}
  {{- if (or $job.annotations $.Values.helmHook.enabled) }}
  annotations:
    {{- if $job.annotations }}
      {{- toYaml $job.annotations | nindent 4 }}
    {{- end }}
    {{- if $.Values.helmHook.enabled }}
      {{- include "wandb-base.helmHookAnnotations" $ | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  {{- with $job.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $job.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  template:
    {{- include "wandb-base.pod" (dict "podData" $job "root" $) | nindent 8 }}
---
{{- end }}
{{- end }}
