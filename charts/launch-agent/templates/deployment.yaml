---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: launch-agent-{{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: launch-agent-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app: launch-agent-{{ .Release.Name }}
        {{- if .Values.agent.labels }}
        {{- toYaml .Values.agent.labels | trim | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.agent.podAnnotations }}
        {{- toYaml .Values.agent.podAnnotations | trim | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: wandb-launch-serviceaccount-{{ .Release.Name }}
      {{- if or .Values.sshAuthSecrets .Values.kanikoPvcName }}
      initContainers:
      {{- end}}
      {{- if .Values.sshAuthSecrets }}
      - name: init-create-ssh-dir
        image: {{ .Values.agent.image }}
        command: ["sh", "-c", "mkdir -p /home/launch_agent/.ssh"]
        volumeMounts:
        - name: ssh-dir
          mountPath: /home/launch_agent/.ssh
      {{- end }}
      {{- if .Values.kanikoPvcName }}
      - name: kaniko-volume-chown
        image: {{ .Values.agent.image }}
        command: ["sh", "-c"]
        args:
        - chown -R 1000:1000 /home/launch_agent/kaniko
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: kaniko-pvc
            mountPath: /home/launch_agent/kaniko
      {{- end }}
      containers:
        - name: launch-agent
          image: {{ .Values.agent.image }}
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.agent.imagePullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          env:
            {{- if not .Values.oidc.enabled }}
            - name: WANDB_API_KEY
              valueFrom:
                secretKeyRef:
                  name: wandb-api-key-{{ .Release.Name }}
                  key: password
            {{- end }}
            - name: WANDB_LAUNCH_SERVICE_ACCOUNT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: WANDB_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: wandb-launch-configmap-{{ .Release.Name }}
                  key: wandb-base-url
            - name: CM_CHECKSUM
              value: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
            - name: WANDB_LAUNCH_START_TIMEOUT
              value: "{{ .Values.agent.startTimeout }}"
            - name: WANDB_RELEASE_NAME
              value: "{{ .Release.Name }}"
            {{- if .Values.additionalEnvVars }}
            {{- range .Values.additionalEnvVars }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
            {{- end }}
            {{- if .Values.additionalSecretEnvVars }}
            {{- range .Values.additionalSecretEnvVars }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: launch-agent-secret-env-vars
                  key: {{ .name }}
            {{- end }}
            {{- end }}
            {{- if and .Values.customCABundle.configMap.name .Values.customCABundle.configMap.key }}
            - name: REQUESTS_CA_BUNDLE
              value: /usr/local/share/ca-certificates/custom-ca.crt
            {{- end }}
            {{- if .Values.kanikoPvcName }}
            - name: WANDB_LAUNCH_KANIKO_PVC_NAME
              value: {{ .Values.kanikoPvcName }}
            - name: WANDB_LAUNCH_KANIKO_PVC_MOUNT_PATH
              value: /home/launch_agent/kaniko
            {{- end }}
            {{- if .Values.kanikoDockerConfigSecret }}
            - name: WANDB_LAUNCH_KANIKO_AUTH_SECRET
              value: {{ .Values.kanikoDockerConfigSecret }}
            {{- end }}
            {{- if .Values.oidc.enabled }}
            - name: WANDB_IDENTITY_TOKEN_FILE
              value: "{{ .Values.oidc.tokenPath }}/oidc-token"
            - name: WANDB_CREDENTIALS_FILE
              value: "/home/launch_agent/.wandb-creds-config/credentials.json"
            {{- end }}
          volumeMounts:
            - name: ssh-dir
              mountPath: /home/launch_agent/.ssh
            - name: wandb-launch-config
              mountPath: /home/launch_agent/.config/wandb
              readOnly: true
            {{ if .Values.gitCreds}}
            - name: git-creds
              mountPath: /home/launch_agent/.gitconfig
              subPath: .gitconfig
              readOnly: true
            - name: git-creds
              mountPath: /home/launch_agent/.git-credentials
              subPath: .git-credentials
              readOnly: true
            {{ end }}
            {{ if .Values.sshAuthSecrets }}
            {{- range $index, $secret := .Values.sshAuthSecrets }}
            - name: git-ssh-key-secret-{{ $index }}
              mountPath: /home/launch_agent/.ssh/id_repo{{ $index }}
              subPath: id_repo{{ $index }}
              readOnly: true
            {{- end }}
            - name: ssh-config
              mountPath: /home/launch_agent/.ssh/config
              subPath: config
              readOnly: true
            {{ end }}
            {{- if and .Values.customCABundle.configMap.name .Values.customCABundle.configMap.key }}
            - name: custom-cabundle
              mountPath: /usr/local/share/ca-certificates/custom-ca.crt
              subPath: custom-ca.crt
              readOnly: true
            {{ end }}
            {{- if .Values.kanikoPvcName }}
            - name: kaniko-pvc
              mountPath: /home/launch_agent/kaniko
            {{ end }}
            {{- if .Values.oidc.enabled }}
            - name: wandb-creds-config
              mountPath: /home/launch_agent/.wandb-creds-config
            - name: oidc-token
              mountPath: {{ .Values.oidc.tokenPath }}
              readOnly: true
            {{ end }}
      volumes:
        - name: ssh-dir
          emptyDir: {}
        - name: wandb-launch-config
          configMap:
            name: wandb-launch-configmap-{{ .Release.Name }}
        {{ if .Values.gitCreds}}
        - name: git-creds
          secret:
            secretName: git-creds
        {{ end}}
        {{ if .Values.sshAuthSecrets }}
        {{- range $index, $secret := .Values.sshAuthSecrets }}
        - name: git-ssh-key-secret-{{ $index }}
          secret:
            secretName: {{ $secret.name }}
            items:
              - key: ssh-privatekey
                path: id_repo{{ $index }}
        {{- end }}
        - name: ssh-config
          configMap:
            name: ssh-config-{{ .Release.Name }}
            items:
              - key: config
                path: config
        {{ end }}
        {{- if and .Values.customCABundle.configMap.name .Values.customCABundle.configMap.key }}
        - name: custom-cabundle
          configMap:
            name: {{ .Values.customCABundle.configMap.name }}
            items:
              - key: {{ .Values.customCABundle.configMap.key }}
                path: custom-ca.crt
        {{- end }}
        {{ if .Values.kanikoPvcName }}
        - name: kaniko-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.kanikoPvcName }}
        {{- end }}
        {{ if .Values.oidc.enabled }}
        - name: wandb-creds-config
          emptyDir: {}
        - name: oidc-token
          projected:
            sources:
            - serviceAccountToken:
                path: oidc-token
                expirationSeconds: {{ .Values.oidc.expirationSeconds }}
                {{- if .Values.oidc.audience }}
                audience: {{ .Values.oidc.audience }}
                {{- end }}
        {{ end }}
      nodeSelector:
        {{- toYaml .Values.agent.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.agent.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.agent.affinity | nindent 8 }}
---
{{- if .Capabilities.APIVersions.Has "policy/v1" }}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: launch-agent-{{ .Release.Name }}
spec:
  minAvailable: {{ .Values.agent.minAvailable }}
  selector:
    matchLabels:
      app: launch-agent-{{ .Release.Name }}
---
{{- end }}
