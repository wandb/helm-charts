global:
  bucket:
    provider: "s3"
    name: "minio.minio.svc.cluster.local:9000/bucket"
    region: "us-east-1"
    accessKey: "minio"
    secretKey: "testpassword"
  env:
    GLOBAL_ADMIN_API_KEY: "local-123456789-123456789-123456789-1234"
    GORILLA_INSECURE_ALLOW_API_KEY_ADMIN_ACCESS: "true"
  size: "testing"
  # Global priority class - should apply to all components that don't have specific config
  priorityClassName: "wandb-global-priority"
  nodeSelector:
    environment: "testing"
  tolerations:
    - effect: NoSchedule
      key: "testing"
      operator: Equal
      value: "true"

app:
  env:
    GORILLA_STORAGE_BUCKET: "s3://local-files"

# Console with component-specific priority class override
console:
  priorityClassName: "wandb-console-priority"
  containers:
    console:
      resources:
        requests:
          cpu: 50m
          memory: 64Mi

# API without specific priority class - should inherit global
api:
  containers:
    api:
      resources:
        requests:
          cpu: 50m
          memory: 64Mi

# Parquet with specific priority class
parquet:
  priorityClassName: "wandb-data-priority"
  containers:
    parquet:
      resources:
        requests:
          cpu: 50m
          memory: 64Mi

ingress:
  install: false
  create: false

mysql:
  install: true
  # MySQL should use its own priorityClassName override from the global wandb.priorityClassName helper
  priorityClassName: "wandb-database-priority"
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"

redis:
  install: true
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"

reloader:
  install: true
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"

anaconda2:
  install: true
